native struct bool { }
native struct string { }
native struct num { }

native enum Team {
    Team1, Team2, All
}

native enum Slot {
    Slot0, Slot1, All
}

native event OngoingEachPlayer(team: Team = Team.All, heroSlot: Hero | Slot = Slot.All) {
    native val player: Player;
}

open native struct Player {

    var counter: num;

    native getvar isReloading: bool;
    native setvar damageDealt: num;

    native fn sendSmallMessage(message: string);

    native fn heal(amount: num, player: Player);
}

native enum Hero {
    Ana, Zarya, Cassidy, Sombra, Orisa, Reinhardt
}


rule "Hello World" OngoingEachPlayer() {
    cond player.isReloading;

    val hello: bool;

    player.counter += 1;
    player.counter -= 1;
    player.counter *= 1;
    player.counter /= 1;
    player.counter = 10;
    player.damageDealt = 150;
    player.sendSmallMessage("Hello World");
 }